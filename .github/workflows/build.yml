name: build

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

concurrency:
  group: ${{ github.ref }}-build
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        jdk_version: ['8', '11', '17']
      fail-fast: false

    runs-on: self-hosted

    steps:
      - name: Clear /tmp
        run: |
          docker run --rm -v /tmp:/data alpine find /data -ctime +2 -exec rm -rf '{}' \; 2>&1 > /dev/null || true

      - name: Clear old Docker resources
        run: |
          docker rm -f $(docker ps -aq) || true
          docker volume rm $(docker volume ps -q) || true
          docker system prune -af || true
          docker image prune -af || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.OSS_DOCKERHUB_USERNAME }}
          password: ${{ secrets.OSS_DOCKERHUB_PASSWORD }}

      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '${{ matrix.jdk_version }}'
          distribution: 'temurin'

      - name: Remove old Concord artifacts
        run: |
          rm -rf ~/.m2/repository/com/walmartlabs/concord
          rm -rf ~/actions-runner/.m2/repository/com/walmartlabs/concord

      - name: Build and test with Maven
        run: ./mvnw -B clean install -Pdocker -Pit -Pjdk${{ matrix.jdk_version }}
        
      - name: Build with debian docker images
        run: ./mvnw -C -B -f docker-images install -DskipTests -Pdocker -Pdebian -Pjdk${{ matrix.jdk_version }}
