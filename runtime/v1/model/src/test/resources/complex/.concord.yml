imports:
  - git: {url: "http://host/org/repo", version: "master", path: "dir", dest: "concord"}
  - git:
      name: "git-org/concord-template"
      version: "dev"
      path: "root"
      dest: "tmp"
      secret:
        org: "Default"
        name: "secret-name"
  - mvn:
      url: "mvn://maven/my-artifact.jar"

resources:
  flows: myFlows
  profiles: myProfiles
  disabled:
    - processes

flows:
  main:
  - ${myTask.method(arg)}

  - expr: ${myTask.method(arg)}

  - expr: ${myTask.method(arg)}
    out: myVar
    error:
    - ${handleError}

  - myTask: [arg1, arg2]

  - log: |
      multiline
      stuff

  - task: myTask
    in:
      inVar: myVar
      otherInVar: ${myTask.doSomething()}
    out:
      outVar: inVar
    error:
    - ${handleError}

  - if: ${condition}
    then:
    - log: it's true
    else:
    - log: nope

  - if: ${condition}
    then:
    - log: it's also true

  - ::
    - ${task.doSomethingDangerous()}
    error:
    - ${handleError}

  - myOtherFlow

  - script: js
    body: |
      function hello() {
        console.log("Hello");
      }

  myOtherFlow:
  - log: hola!
  - form: myForm

forms:
  myForm:
  - fullName: { label: "Name", type: "string", pattern: ".* .*" }
  - age: { label: "Age", type: "int", min: 21, max: 100 }
  - favouriteColour: { label: "Favourite colour", type: "string", allow: ["gray", "grey"] }
  - languages: { label: "Preferred languages", type: "string+", allow: "${locale.languages()}" }

variables:
  nested:
    stuff: true

profiles:
  myProfile:
    flows:
      myEmptyFlow:
      - log: not so empty!
    forms:
      additionalForm:
      - field1: {type: "string"}
    variables:
      more:
        nested:
          stuff: false

triggers:
  # OneOps compute replacement event
  - oneops:
      org: "myOrg"
      asm: "myAsm"
      env: "myEnv"
      platform: "myPlatform"
      component: "compute"
      type: "replace"
      state: "complete"
      entryPoint: doAfterReplacement
      arguments:
        message: "We got some ${event.payload}"
  - github:
      repository: myRepo
      action: push
      branch: "*"
      entryPoint: doItAfterPush
      arguments:
        message: "${event.action} ${event.commitId} ${event.author}"
  - manual:
      name: Build
      entryPoint: main
  - manual:
      name: Run Integration Tests
      entryPoint: integration
