{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "Concord Server API"
  },
  "host" : "localhost:8001",
  "basePath" : "/",
  "tags" : [ {
    "name" : "API keys"
  }, {
    "name" : "Agents"
  }, {
    "name" : "Audit Log"
  }, {
    "name" : "Checkpoint"
  }, {
    "name" : "CheckpointV2"
  }, {
    "name" : "External Events"
  }, {
    "name" : "GitHub Events"
  }, {
    "name" : "Inventories"
  }, {
    "name" : "Inventory Data"
  }, {
    "name" : "Inventory Queries"
  }, {
    "name" : "JsonStore"
  }, {
    "name" : "JsonStoreData"
  }, {
    "name" : "JsonStoreQuery"
  }, {
    "name" : "Organizations"
  }, {
    "name" : "Policy"
  }, {
    "name" : "PolicyCheck"
  }, {
    "name" : "Process"
  }, {
    "name" : "Process Events"
  }, {
    "name" : "Process Forms"
  }, {
    "name" : "Process KV store"
  }, {
    "name" : "Process Locks"
  }, {
    "name" : "ProcessHeartbeat"
  }, {
    "name" : "ProcessLogV2"
  }, {
    "name" : "ProcessV2"
  }, {
    "name" : "Project Processes"
  }, {
    "name" : "Projects"
  }, {
    "name" : "Repositories"
  }, {
    "name" : "RepositoriesV2"
  }, {
    "name" : "Roles"
  }, {
    "name" : "Secret stores"
  }, {
    "name" : "Secrets"
  }, {
    "name" : "SecretsV2"
  }, {
    "name" : "Teams"
  }, {
    "name" : "TemplateAlias"
  }, {
    "name" : "Triggers"
  }, {
    "name" : "TriggersV2"
  }, {
    "name" : "UserLdapGroup"
  }, {
    "name" : "UserV2"
  }, {
    "name" : "Users"
  } ],
  "schemes" : [ "http" ],
  "paths" : {
    "/api/service/console/apikey/{name}/exists" : {
      "get" : {
        "operationId" : "isApiTokenExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/logout" : {
      "post" : {
        "operationId" : "logout",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/jsonstore/{storageName}/exists" : {
      "get" : {
        "operationId" : "isStorageExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storageName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/jsonstore/{storeName}/query/{queryName}/exists" : {
      "get" : {
        "operationId" : "isStorageQueryExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/project/{projectName}/exists" : {
      "get" : {
        "operationId" : "isProjectExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/project/{projectName}/repo/{repoName}/exists" : {
      "get" : {
        "operationId" : "isRepositoryExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repoName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/secret/{secretName}/exists" : {
      "get" : {
        "operationId" : "isSecretExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/org/{orgName}/team/{teamName}/exists" : {
      "get" : {
        "operationId" : "isTeamExists",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/repository/test" : {
      "post" : {
        "operationId" : "testRepository",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/search/ldapGroups" : {
      "get" : {
        "operationId" : "searchLdapGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "maxLength" : 256,
          "minLength" : 5
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LdapGroupSearchResult"
              }
            }
          }
        }
      }
    },
    "/api/service/console/user/activity" : {
      "get" : {
        "operationId" : "activity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "maxProjectsPerOrg",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "maxOwnProcesses",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserActivityResponse"
            }
          }
        }
      }
    },
    "/api/service/console/validate-password" : {
      "post" : {
        "operationId" : "validatePassword",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/api/service/console/whoami" : {
      "get" : {
        "operationId" : "whoami",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserResponse"
            }
          }
        }
      }
    },
    "/api/service/custom_form/{processInstanceId}/{formName}/continue" : {
      "post" : {
        "operationId" : "continueSession",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "formName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/service/custom_form/{processInstanceId}/{formName}/start" : {
      "post" : {
        "operationId" : "startSession",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "formName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormSessionResponse"
            }
          }
        }
      }
    },
    "/api/v1/agent/all/workers" : {
      "get" : {
        "tags" : [ "Agents" ],
        "summary" : "List currently available agent workers",
        "description" : "",
        "operationId" : "listWorkers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AgentWorkerEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/agent/all/workersCount" : {
      "get" : {
        "tags" : [ "Agents" ],
        "summary" : "Counts the currently connected workers based on the specified capabilities property",
        "description" : "",
        "operationId" : "aggregate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "capabilities",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "integer",
                "format" : "int64"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/apikey" : {
      "get" : {
        "tags" : [ "API keys" ],
        "summary" : "List user api keys",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ApiKeyEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "API keys" ],
        "summary" : "Create a new API key",
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateApiKeyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateApiKeyResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/apikey/{id}" : {
      "delete" : {
        "tags" : [ "API keys" ],
        "summary" : "Delete an existing API key",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/audit" : {
      "get" : {
        "tags" : [ "Audit Log" ],
        "summary" : "List audit log entries for the specified organization",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "object",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "API_KEY", "EXTERNAL_EVENT", "JSON_STORE", "JSON_STORE_DATA", "JSON_STORE_QUERY", "ORGANIZATION", "POLICY", "PROJECT", "PROCESS", "ROLE", "SECRET", "SYSTEM", "TEAM", "USER", "INVENTORY" ]
        }, {
          "name" : "action",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "CREATE", "UPDATE", "DELETE", "ACCESS" ]
        }, {
          "name" : "userId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "username",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "before",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/AuditLogEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/events/{eventName}" : {
      "post" : {
        "tags" : [ "External Events" ],
        "summary" : "Handles an external event",
        "description" : "",
        "operationId" : "event",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventName",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "List organizations",
        "description" : "",
        "operationId" : "find",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "onlyCurrent",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/OrganizationEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Organizations" ],
        "summary" : "Create or update an organization",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/OrganizationEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateOrganizationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/trigger/refresh" : {
      "post" : {
        "tags" : [ "Triggers" ],
        "summary" : "Refresh trigger definitions for all projects",
        "description" : "",
        "operationId" : "refreshAll",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}" : {
      "get" : {
        "tags" : [ "Organizations" ],
        "summary" : "Get an existing organization",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/OrganizationEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Organizations" ],
        "summary" : "Remove an existing organization",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "confirmation",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory" : {
      "get" : {
        "tags" : [ "Inventories" ],
        "summary" : "List existing inventories",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Inventories" ],
        "summary" : "Create or update inventory",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/InventoryEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateInventoryResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}" : {
      "get" : {
        "tags" : [ "Inventories" ],
        "summary" : "Get existing inventory",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InventoryEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Inventories" ],
        "summary" : "Delete inventory",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/access" : {
      "post" : {
        "tags" : [ "Inventories" ],
        "summary" : "Updates the access level for the specified inventory",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceAccessEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/data" : {
      "get" : {
        "tags" : [ "Inventory Data" ],
        "summary" : "List inventory data",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/data/{itemPath}" : {
      "get" : {
        "tags" : [ "Inventory Data" ],
        "summary" : "Get inventory data",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        }, {
          "name" : "singleItem",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Inventory Data" ],
        "summary" : "Modify inventory data",
        "description" : "",
        "operationId" : "data",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Inventory Data" ],
        "summary" : "Delete inventory data",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteInventoryDataResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/query" : {
      "get" : {
        "tags" : [ "Inventory Queries" ],
        "summary" : "List inventory queries",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/InventoryQueryEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/query/{queryName}" : {
      "get" : {
        "tags" : [ "Inventory Queries" ],
        "summary" : "Get inventory query",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/InventoryQueryEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Inventory Queries" ],
        "summary" : "Create or update inventory query",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json", "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateInventoryQueryResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Inventory Queries" ],
        "summary" : "Delete inventory query",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteInventoryQueryResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/inventory/{inventoryName}/query/{queryName}/exec" : {
      "post" : {
        "tags" : [ "Inventory Queries" ],
        "summary" : "Execute inventory query",
        "description" : "",
        "operationId" : "exec",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "inventoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore" : {
      "get" : {
        "tags" : [ "JsonStore" ],
        "summary" : "List existing stores",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JsonStoreEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Create or update a store",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JsonStoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}" : {
      "get" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Get an existing store",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonStoreEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Delete an existing store",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/access" : {
      "get" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Get a store's team access parameters",
        "description" : "",
        "operationId" : "getAccessLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourceAccessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Updates the access level for the specified store",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceAccessEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/access/bulk" : {
      "post" : {
        "tags" : [ "JsonStore" ],
        "summary" : "Updates the access level for the specified store and team",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResourceAccessEntry"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/capacity" : {
      "get" : {
        "tags" : [ "JsonStore" ],
        "operationId" : "getCapacity",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonStoreCapacity"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/execQuery" : {
      "post" : {
        "tags" : [ "JsonStoreQuery" ],
        "operationId" : "execQuery",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "maxLimit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/item" : {
      "get" : {
        "tags" : [ "JsonStoreData" ],
        "summary" : "List items in a JSON store",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/item/{itemPath}" : {
      "get" : {
        "tags" : [ "JsonStoreData" ],
        "summary" : "Get store data",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "JsonStoreData" ],
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "JsonStoreData" ],
        "summary" : "Update an item in a store",
        "description" : "",
        "operationId" : "data",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "JsonStoreData" ],
        "summary" : "Remove an item from a store",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "itemPath",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/query" : {
      "get" : {
        "tags" : [ "JsonStoreQuery" ],
        "summary" : "List JSON Store queries",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JsonStoreQueryEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "JsonStoreQuery" ],
        "summary" : "Create or update a JSON store query",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/JsonStoreQueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/query/{queryName}" : {
      "get" : {
        "tags" : [ "JsonStoreQuery" ],
        "summary" : "Get an existing JSON store query",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JsonStoreQueryEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "JsonStoreQuery" ],
        "summary" : "Delete an existing JSON query query",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/jsonstore/{storeName}/query/{queryName}/exec" : {
      "post" : {
        "tags" : [ "JsonStoreQuery" ],
        "summary" : "Execute an existing JSON store query",
        "description" : "",
        "operationId" : "exec",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "storeName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "queryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/process" : {
      "get" : {
        "tags" : [ "Project Processes" ],
        "summary" : "List processes for the specified organization",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "afterCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beforeCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/v1/org/{orgName}/project" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "List existing projects",
        "description" : "",
        "operationId" : "find",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProjectEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Creates a new project or updates an existing one",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProjectEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProjectOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get an existing project",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProjectEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Projects" ],
        "summary" : "Delete an existing project",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/access" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get project team access",
        "description" : "",
        "operationId" : "getAccessLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourceAccessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Updates the access level for the specified project and team",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceAccessEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/access/bulk" : {
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Updates the access level for the specified project and team",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResourceAccessEntry"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/cfg" : {
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Update a project's configuration parameter",
        "description" : "",
        "operationId" : "updateConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/cfg{path}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get a project's configuration",
        "description" : "",
        "operationId" : "getConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "(.*)?"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "object"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Update a project's configuration parameter",
        "description" : "",
        "operationId" : "updateConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "(.*)?"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Projects" ],
        "summary" : "Delete a project's configuration parameter",
        "description" : "",
        "operationId" : "deleteConfiguration",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "(.*)?"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/encrypt" : {
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Encrypts a string with the project's key",
        "description" : "",
        "operationId" : "encrypt",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/EncryptValueResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/kv" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "list KV",
        "description" : "",
        "operationId" : "findKV",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KvEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/process" : {
      "get" : {
        "tags" : [ "Project Processes" ],
        "summary" : "List processes for the specified project",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "afterCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beforeCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repo/{repoName}/start/{entryPoint}" : {
      "get" : {
        "tags" : [ "Project Processes" ],
        "summary" : "Start a new process",
        "description" : "",
        "operationId" : "start",
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repoName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repoBranchOrTag",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "repoCommitId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entryPoint",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "activeProfiles",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repo/{repositoryName}/trigger" : {
      "get" : {
        "tags" : [ "Triggers" ],
        "summary" : "List trigger definitions",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TriggerEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Triggers" ],
        "summary" : "Refresh trigger definitions for the specified project and repository",
        "description" : "",
        "operationId" : "refresh",
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repository" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "List existing repositories",
        "description" : "",
        "operationId" : "find",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RepositoryEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Creates a new repository or updates an existing one",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RepositoryEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repository/{repositoryName}" : {
      "get" : {
        "tags" : [ "Repositories" ],
        "summary" : "Get an existing repository",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RepositoryEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Repositories" ],
        "summary" : "Delete an existing repository",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repository/{repositoryName}/refresh" : {
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Refresh a local copy of the repository",
        "description" : "",
        "operationId" : "refreshRepository",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sync",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/project/{projectName}/repository/{repositoryName}/validate" : {
      "post" : {
        "tags" : [ "Repositories" ],
        "summary" : "Validate an existing repository",
        "description" : "",
        "operationId" : "validateRepository",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "repositoryName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RepositoryValidationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "List secrets",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SecretEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Secrets" ],
        "summary" : "Creates a new secret",
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SecretOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret/{secretName}" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Get an existing secret",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SecretEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Secrets" ],
        "summary" : "Updates an existing secret",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SecretUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Secrets" ],
        "summary" : "Delete an existing secret",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret/{secretName}/access" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Get secret team access",
        "description" : "",
        "operationId" : "getAccessLevel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ResourceAccessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Secrets" ],
        "summary" : "Updates the access level for the specified secret and team",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResourceAccessEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret/{secretName}/access/bulk" : {
      "post" : {
        "tags" : [ "Secrets" ],
        "summary" : "Updates the access level for the specified secret and team",
        "description" : "",
        "operationId" : "updateAccessLevel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ResourceAccessEntry"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret/{secretName}/data" : {
      "post" : {
        "tags" : [ "Secrets" ],
        "summary" : "Get an existing secret's data",
        "description" : "",
        "operationId" : "getData",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "file"
            },
            "headers" : {
              "X-Concord-SecretType" : {
                "type" : "string",
                "description" : "Secret type"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/secret/{secretName}/public" : {
      "get" : {
        "tags" : [ "Secrets" ],
        "summary" : "Retrieves the public key of a key pair",
        "description" : "",
        "operationId" : "getPublicKey",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PublicKeyResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/team" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "List teams",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TeamEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Teams" ],
        "summary" : "Create or update a team",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TeamEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateTeamResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/team/{teamName}" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Get an existing team",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TeamEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Teams" ],
        "summary" : "Delete an existing team",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/team/{teamName}/ldapGroups" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "List ldap roles of a team",
        "description" : "",
        "operationId" : "listLdapGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TeamLdapGroupEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Teams" ],
        "summary" : "Add LDAP groups to a team",
        "description" : "",
        "operationId" : "addLdapGroups",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "replace",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TeamLdapGroupEntry"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddTeamLdapGroupsResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{orgName}/team/{teamName}/users" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "List users of a team",
        "description" : "",
        "operationId" : "listUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TeamUserEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Teams" ],
        "summary" : "Add users to a team",
        "description" : "",
        "operationId" : "addUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "replace",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TeamUserEntry"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AddTeamUsersResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Teams" ],
        "summary" : "Remove users from a team",
        "description" : "",
        "operationId" : "removeUsers",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RemoveTeamUsersResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/org/{processInstanceId}/next" : {
      "post" : {
        "tags" : [ "Project Processes" ],
        "summary" : "Proceed to next step for the process",
        "description" : "",
        "operationId" : "proceed",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "List processes for all user's organizations",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "org",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "project",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "afterCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beforeCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tags",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "initiator",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "parentInstanceId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Start a new process using multipart request data",
        "description" : "",
        "operationId" : "start",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartInput"
          }
        }, {
          "name" : "parentId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "sync",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "out",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StartProcessResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/bulk" : {
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Forcefully stop processes",
        "description" : "",
        "operationId" : "batchKill",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "uuid"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get a process' details",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      },
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Forcefully stops a process",
        "description" : "",
        "operationId" : "kill",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/attachment" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "List attachments",
        "description" : "",
        "operationId" : "listAttachments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Process" ],
        "operationId" : "uploadAttachments",
        "consumes" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/attachment/{name}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Download a process' attachment",
        "description" : "",
        "operationId" : "downloadAttachment",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1,
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/cascade" : {
      "delete" : {
        "tags" : [ "Process" ],
        "summary" : "Forcefully stops a process and its all children",
        "description" : "",
        "operationId" : "killCascade",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/checkpoint" : {
      "get" : {
        "tags" : [ "Checkpoint" ],
        "summary" : "List the process checkpoints",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessCheckpointEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Checkpoint" ],
        "operationId" : "uploadCheckpoint",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartInput"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/checkpoint/restore" : {
      "post" : {
        "tags" : [ "Checkpoint" ],
        "summary" : "Restore process from checkpoint",
        "description" : "",
        "operationId" : "restore",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RestoreCheckpointRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResumeProcessResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/decrypt" : {
      "post" : {
        "tags" : [ "Process" ],
        "operationId" : "decrypt",
        "consumes" : [ "application/octet-stream" ],
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/disable/{disabled}" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Disable a process",
        "description" : "",
        "operationId" : "disable",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "disabled",
          "in" : "path",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/fork" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Fork a process",
        "description" : "",
        "operationId" : "fork",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "sync",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "out",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/StartProcessResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/kv/{key}" : {
      "delete" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Delete KV",
        "description" : "",
        "operationId" : "removeKey",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/kv/{key}/inc" : {
      "post" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Inc long KV",
        "description" : "",
        "operationId" : "incLong",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/kv/{key}/long" : {
      "get" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Get long KV",
        "description" : "",
        "operationId" : "getLong",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int64"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Put long KV",
        "description" : "",
        "operationId" : "putLong",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/kv/{key}/string" : {
      "get" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Get string KV",
        "description" : "",
        "operationId" : "getString",
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Process KV store" ],
        "summary" : "Put string KV",
        "description" : "",
        "operationId" : "putString",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "key",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/log" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Retrieve the log",
        "description" : "",
        "operationId" : "getLog",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "range",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      },
      "post" : {
        "tags" : [ "Process" ],
        "operationId" : "appendLog",
        "consumes" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ],
        "deprecated" : true
      }
    },
    "/api/v1/process/{id}/meta" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Update process metadata",
        "description" : "",
        "operationId" : "updateMetadata",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/ping" : {
      "post" : {
        "tags" : [ "ProcessHeartbeat" ],
        "summary" : "Process heartbeat",
        "description" : "",
        "operationId" : "ping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/resume/{eventName}" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Resume a process",
        "description" : "",
        "operationId" : "resume",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "saveAs",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ResumeProcessResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/state/snapshot" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Download a process state snapshot",
        "description" : "",
        "operationId" : "downloadState",
        "produces" : [ "application/zip" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/state/snapshot/{name}" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Download a single file from a process state snapshot",
        "description" : "",
        "operationId" : "downloadStateFile",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxLength" : 2147483647,
          "minLength" : 1,
          "pattern" : ".*"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "file"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/status" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Update process status",
        "description" : "",
        "operationId" : "updateStatus",
        "consumes" : [ "text/plain" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "agentId",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/subprocess" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "List subprocesses of a parent process",
        "description" : "",
        "operationId" : "listSubprocesses",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tags",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/wait" : {
      "post" : {
        "tags" : [ "Process" ],
        "summary" : "Set the process' wait condition",
        "description" : "",
        "operationId" : "setWaitCondition",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{id}/waitForCompletion" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Wait for a process to finish",
        "description" : "",
        "operationId" : "waitForCompletion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "timeout",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{instanceId}/history" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get process status history",
        "description" : "",
        "operationId" : "getStatusHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessStatusHistoryEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{instanceId}/waits" : {
      "get" : {
        "tags" : [ "Process" ],
        "summary" : "Get process' wait conditions",
        "description" : "",
        "operationId" : "getWait",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "instanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessWaitEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/event" : {
      "get" : {
        "tags" : [ "Process Events" ],
        "summary" : "List process events",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "after",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fromId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "eventCorrelationId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "eventPhase",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "PRE", "POST" ]
        }, {
          "name" : "includeAll",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : -1,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEventEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Process Events" ],
        "summary" : "Register a process event",
        "description" : "",
        "operationId" : "event",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ProcessEventRequest"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "session_key" : [ ]
        }, {
          "api_key" : [ ]
        }, {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/eventBatch" : {
      "post" : {
        "tags" : [ "Process Events" ],
        "summary" : "Register multiple events for the specified process",
        "description" : "",
        "operationId" : "batchEvent",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ProcessEventRequest"
            }
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "session_key" : [ ]
        }, {
          "api_key" : [ ]
        }, {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/form" : {
      "get" : {
        "tags" : [ "Process Forms" ],
        "summary" : "List the available forms",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FormListEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/form/{formName}" : {
      "get" : {
        "tags" : [ "Process Forms" ],
        "summary" : "Get the current state of a form",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "formName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormInstanceEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Process Forms" ],
        "summary" : "Submit JSON form data",
        "description" : "",
        "operationId" : "submit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "formName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormSubmitResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/form/{formName}/multipart" : {
      "post" : {
        "tags" : [ "Process Forms" ],
        "summary" : "Submit multipart form data",
        "description" : "",
        "operationId" : "submit",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "formName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/FormSubmitResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/lock/{lockName}" : {
      "post" : {
        "tags" : [ "Process Locks" ],
        "summary" : "Try lock",
        "description" : "",
        "operationId" : "tryLock",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "lockName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scope",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "PROJECT",
          "enum" : [ "ORG", "PROJECT" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LockResult"
            }
          }
        },
        "security" : [ {
          "session_key" : [ ]
        } ]
      }
    },
    "/api/v1/process/{processInstanceId}/unlock/{lockName}" : {
      "post" : {
        "tags" : [ "Process Locks" ],
        "summary" : "Releases the lock",
        "description" : "",
        "operationId" : "unlock",
        "parameters" : [ {
          "name" : "processInstanceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "lockName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scope",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "PROJECT",
          "enum" : [ "ORG", "PROJECT" ]
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "session_key" : [ ]
        } ]
      }
    },
    "/api/v1/role" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "List roles",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RoleEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Roles" ],
        "summary" : "Create or update a role",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/RoleEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RoleOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/role/{roleName}" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "Get a role's details",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RoleEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Roles" ],
        "summary" : "Delete an existing role",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/role/{roleName}/ldapGroups" : {
      "get" : {
        "tags" : [ "Roles" ],
        "summary" : "List ldap groups of a role",
        "description" : "",
        "operationId" : "listLdapGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Roles" ],
        "summary" : "Add LDAP groups to a role",
        "description" : "",
        "operationId" : "addLdapGroups",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "roleName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "replace",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/secret/store" : {
      "get" : {
        "tags" : [ "Secret stores" ],
        "summary" : "List of active secret stores",
        "description" : "",
        "operationId" : "listActiveStores",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SecretStoreEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/server/maintenance-mode" : {
      "post" : {
        "operationId" : "maintenanceMode",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api/v1/server/ping" : {
      "get" : {
        "operationId" : "ping",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PingResponse"
            }
          }
        }
      }
    },
    "/api/v1/server/version" : {
      "get" : {
        "operationId" : "version",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/VersionResponse"
            }
          }
        }
      }
    },
    "/api/v1/template/alias" : {
      "get" : {
        "tags" : [ "TemplateAlias" ],
        "summary" : "List current template aliases",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TemplateAliasEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "TemplateAlias" ],
        "summary" : "Create or update a template alias",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TemplateAliasEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TemplateAliasResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/template/alias/{alias}" : {
      "delete" : {
        "tags" : [ "TemplateAlias" ],
        "summary" : "Delete existing template alias",
        "description" : "",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "alias",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TemplateAliasResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/user" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Create a new user or update an existing one",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateUserRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/CreateUserResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/user/{id}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete an existing user",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DeleteUserResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/user/{username}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Find a user",
        "description" : "",
        "operationId" : "findByUsername",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxLength" : 128,
          "minLength" : 0
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/user/{username}/roles" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Update the list of roles for the existing user",
        "description" : "",
        "operationId" : "updateUserRoles",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxLength" : 128,
          "minLength" : 0
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateUserRolesRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/userldapgroup/sync" : {
      "post" : {
        "tags" : [ "UserLdapGroup" ],
        "summary" : "Sync ldap groups for a user",
        "description" : "",
        "operationId" : "sync",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SyncUserLdapGroupRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v1/{entityType}/canCreate" : {
      "get" : {
        "tags" : [ "PolicyCheck" ],
        "summary" : "Check for new entity creation",
        "description" : "",
        "operationId" : "canCreate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entityType",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "enum" : [ "ORGANIZATION", "PROJECT", "REPOSITORY", "SECRET", "JSON_STORE", "JSON_STORE_ITEM", "JSON_STORE_QUERY", "TRIGGER" ]
        }, {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/org/{orgName}/project/{projectName}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get an existing project",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProjectEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/org/{orgName}/secret" : {
      "get" : {
        "tags" : [ "SecretsV2" ],
        "summary" : "List secrets",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SecretEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/org/{orgName}/secret/{secretName}" : {
      "get" : {
        "tags" : [ "SecretsV2" ],
        "summary" : "Get an existing secret",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SecretEntryV2"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "SecretsV2" ],
        "summary" : "Updates an existing secret",
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "secretName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/MultipartInput"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/policy" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "List policies, optionally filtering by organization, project and/or user links",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userDomain",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userType",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PolicyEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Policy" ],
        "summary" : "Create or update a policy",
        "description" : "",
        "operationId" : "createOrUpdate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PolicyEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/policy/refresh" : {
      "post" : {
        "tags" : [ "Policy" ],
        "operationId" : "refresh",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/policy/{policyName}" : {
      "get" : {
        "tags" : [ "Policy" ],
        "summary" : "Get an existing policy",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "policyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/PolicyEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "summary" : "Delete an existing policy",
        "description" : "",
        "operationId" : "delete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "policyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/policy/{policyName}/link" : {
      "put" : {
        "tags" : [ "Policy" ],
        "summary" : "Link an existing policy to an organization, a project or user",
        "description" : "",
        "operationId" : "link",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "policyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PolicyLinkEntry"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Policy" ],
        "summary" : "Unlink an existing policy",
        "description" : "",
        "operationId" : "unlink",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "policyName",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userDomain",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userType",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process" : {
      "get" : {
        "tags" : [ "ProcessV2" ],
        "summary" : "List processes",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "repoId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "repoName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "afterCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beforeCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tags",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "initiator",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "parentInstanceId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "include",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "CHECKPOINTS", "CHECKPOINTS_HISTORY", "CHILDREN_IDS", "STATUS_HISTORY" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/count" : {
      "get" : {
        "tags" : [ "ProcessV2" ],
        "summary" : "Count processes",
        "description" : "",
        "operationId" : "count",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "orgId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "repoId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "repoName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "afterCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "beforeCreatedAt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tags",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "initiator",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "parentInstanceId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/requirements" : {
      "get" : {
        "tags" : [ "ProcessV2" ],
        "summary" : "List process requirements",
        "description" : "",
        "operationId" : "listRequirements",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ProcessRequirementsEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/{id}" : {
      "get" : {
        "tags" : [ "ProcessV2" ],
        "summary" : "Get a process' details",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "include",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "CHECKPOINTS", "CHECKPOINTS_HISTORY", "CHILDREN_IDS", "STATUS_HISTORY" ]
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/ProcessEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/{id}/checkpoint" : {
      "get" : {
        "tags" : [ "CheckpointV2" ],
        "summary" : "Process checkpoint",
        "description" : "",
        "operationId" : "processCheckpoint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "name",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericCheckpointResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/{id}/log/segment" : {
      "get" : {
        "tags" : [ "ProcessLogV2" ],
        "summary" : "List process log segments",
        "description" : "",
        "operationId" : "segments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 30,
          "format" : "int32"
        }, {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LogSegment"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "ProcessLogV2" ],
        "summary" : "Create process log segment",
        "description" : "",
        "operationId" : "segment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LogSegmentRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LogSegmentOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/{id}/log/segment/{segmentId}" : {
      "post" : {
        "tags" : [ "ProcessLogV2" ],
        "summary" : "Update process log segment",
        "description" : "",
        "operationId" : "updateSegment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "segmentId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/LogSegmentUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LogSegmentOperationResponse"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/process/{id}/log/segment/{segmentId}/data" : {
      "get" : {
        "tags" : [ "ProcessLogV2" ],
        "summary" : "Retrieve the log",
        "description" : "",
        "operationId" : "data",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "segmentId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "range",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "ProcessLogV2" ],
        "operationId" : "append",
        "consumes" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "segmentId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/repository/refresh" : {
      "post" : {
        "tags" : [ "RepositoriesV2" ],
        "summary" : "Refresh repositories by their IDs",
        "description" : "",
        "operationId" : "refreshRepository",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "uuid"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GenericOperationResult"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/trigger" : {
      "get" : {
        "tags" : [ "TriggersV2" ],
        "summary" : "List trigger definitions",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orgId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "orgName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "projectName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "repoId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "repoName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TriggerEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/user" : {
      "get" : {
        "tags" : [ "UserV2" ],
        "summary" : "Returns a list of existing active users matching the supplied filter",
        "description" : "",
        "operationId" : "list",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10,
          "format" : "int32"
        }, {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/UserEntry"
              }
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/api/v2/user/{id}" : {
      "get" : {
        "tags" : [ "UserV2" ],
        "summary" : "Get an existing user",
        "description" : "",
        "operationId" : "get",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/UserEntry"
            }
          }
        },
        "security" : [ {
          "api_key" : [ ]
        }, {
          "session_key" : [ ]
        }, {
          "ldap" : [ ]
        } ]
      }
    },
    "/events/github/webhook" : {
      "post" : {
        "tags" : [ "GitHub Events" ],
        "summary" : "Handles GitHub repository level events",
        "description" : "",
        "operationId" : "onEvent",
        "consumes" : [ "application/json" ],
        "produces" : [ "text/plain" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }, {
          "name" : "X-GitHub-Delivery",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-GitHub-Event",
          "in" : "header",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "api_key" : {
      "description" : "API key",
      "type" : "apiKey",
      "name" : "api_key",
      "in" : "header"
    },
    "ldap" : {
      "description" : "AD/LDAP username/password",
      "type" : "basic"
    },
    "session_key" : {
      "description" : "Process session key",
      "type" : "apiKey",
      "name" : "session_key",
      "in" : "header"
    }
  },
  "definitions" : {
    "AddTeamLdapGroupsResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "AddTeamUsersResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "AgentWorkerEntry" : {
      "type" : "object",
      "properties" : {
        "channelId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "agentId" : {
          "type" : "string",
          "readOnly" : true
        },
        "userAgent" : {
          "type" : "string",
          "readOnly" : true
        },
        "capabilities" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ApiKeyEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "userId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "expiredAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "AuditLogEntry" : {
      "type" : "object",
      "properties" : {
        "entryDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "action" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATE", "UPDATE", "DELETE", "ACCESS" ]
        },
        "object" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "API_KEY", "EXTERNAL_EVENT", "JSON_STORE", "JSON_STORE_DATA", "JSON_STORE_QUERY", "ORGANIZATION", "POLICY", "PROJECT", "PROCESS", "ROLE", "SECRET", "SYSTEM", "TEAM", "USER", "INVENTORY" ]
        },
        "details" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "user" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        }
      }
    },
    "CheckpointRestoreHistoryEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "checkpointId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "processStatus" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        },
        "changeDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "CreateApiKeyRequest" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "CreateApiKeyResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "key" : {
          "type" : "string",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "CreateInventoryQueryResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "CreateInventoryResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "CreateOrganizationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "CreateTeamResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "CreateUserRequest" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 128
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 512
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 1024
        },
        "email" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 512
        },
        "disabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "roles" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "type" : {
          "type" : "string",
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        }
      }
    },
    "CreateUserResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "DeleteInventoryDataResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "DeleteInventoryQueryResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "DeleteUserResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "EncryptValueResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "string",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "EntityOwner" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        }
      }
    },
    "Field" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "label" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "cardinality" : {
          "type" : "string",
          "enum" : [ "ONE_OR_NONE", "ONE_AND_ONLY_ONE", "AT_LEAST_ONE", "ANY" ]
        },
        "value" : {
          "type" : "object"
        },
        "allowedValue" : {
          "type" : "object"
        },
        "options" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "FormInstanceEntry" : {
      "type" : "object",
      "properties" : {
        "processInstanceId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "fields" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/Field"
          }
        },
        "custom" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "yield" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "FormListEntry" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "custom" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "yield" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "runAs" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "FormSessionResponse" : {
      "type" : "object",
      "properties" : {
        "uri" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "FormSubmitResponse" : {
      "type" : "object",
      "properties" : {
        "processInstanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "errors" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "GenericCheckpointResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "GenericOperationResult" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "InputPart" : {
      "type" : "object",
      "properties" : {
        "headers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        },
        "mediaType" : {
          "$ref" : "#/definitions/MediaType"
        },
        "bodyAsString" : {
          "type" : "string"
        },
        "contentTypeFromMessage" : {
          "type" : "boolean"
        }
      }
    },
    "InventoryEntry" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/InventoryOwner"
        },
        "parent" : {
          "readOnly" : true,
          "$ref" : "#/definitions/InventoryEntry"
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    },
    "InventoryOwner" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "InventoryQueryEntry" : {
      "type" : "object",
      "required" : [ "name", "text" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "inventoryId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "text" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "JsonStoreCapacity" : {
      "type" : "object",
      "properties" : {
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "maxSize" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        }
      }
    },
    "JsonStoreEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        }
      }
    },
    "JsonStoreQueryEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "storeId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "text" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "JsonStoreQueryRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "text" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "JsonStoreRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        }
      }
    },
    "KvEntry" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "readOnly" : true
        },
        "value" : {
          "type" : "object",
          "readOnly" : true
        },
        "lastUpdatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "LdapGroupSearchResult" : {
      "type" : "object",
      "properties" : {
        "groupName" : {
          "type" : "string",
          "readOnly" : true
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "LockEntry" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "scope" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "ORG", "PROJECT" ]
        }
      }
    },
    "LockResult" : {
      "type" : "object",
      "properties" : {
        "info" : {
          "readOnly" : true,
          "$ref" : "#/definitions/LockEntry"
        },
        "acquired" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "LogSegment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "correlationId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OK", "FAILED", "RUNNING" ]
        },
        "statusUpdatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "warnings" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "errors" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "LogSegmentOperationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "LogSegmentRequest" : {
      "type" : "object",
      "properties" : {
        "correlationId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "LogSegmentUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OK", "FAILED", "RUNNING" ]
        },
        "warnings" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "errors" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "MediaType" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "subtype" : {
          "type" : "string"
        },
        "parameters" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "wildcardType" : {
          "type" : "boolean"
        },
        "wildcardSubtype" : {
          "type" : "boolean"
        }
      }
    },
    "MultipartInput" : {
      "type" : "object",
      "properties" : {
        "parts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/InputPart"
          }
        },
        "preamble" : {
          "type" : "string"
        }
      }
    },
    "OrganizationEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "meta" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "cfg" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "PingResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "PolicyEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "parentId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "rules" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "PolicyLinkEntry" : {
      "type" : "object",
      "properties" : {
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "userName" : {
          "type" : "string",
          "readOnly" : true
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PolicyOperationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        }
      }
    },
    "ProcessCheckpointEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "correlationId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        }
      }
    },
    "ProcessEntry" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "kind" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "DEFAULT", "FAILURE_HANDLER", "CANCEL_HANDLER", "TIMEOUT_HANDLER" ]
        },
        "parentInstanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "repoId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "repoName" : {
          "type" : "string",
          "readOnly" : true
        },
        "repoUrl" : {
          "type" : "string",
          "readOnly" : true
        },
        "repoPath" : {
          "type" : "string",
          "readOnly" : true
        },
        "commitId" : {
          "type" : "string",
          "readOnly" : true
        },
        "commitBranch" : {
          "type" : "string",
          "readOnly" : true
        },
        "commitMsg" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "initiator" : {
          "type" : "string",
          "readOnly" : true
        },
        "initiatorId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        },
        "lastAgentId" : {
          "type" : "string",
          "readOnly" : true
        },
        "startAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastUpdatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastRunAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "logFileName" : {
          "type" : "string",
          "readOnly" : true
        },
        "tags" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "childrenIds" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "format" : "uuid"
          }
        },
        "meta" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "handlers" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        },
        "requirements" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "disabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "checkpoints" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProcessCheckpointEntry"
          }
        },
        "checkpointRestoreHistory" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/CheckpointRestoreHistoryEntry"
          }
        },
        "statusHistory" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProcessStatusHistoryEntry"
          }
        },
        "triggeredBy" : {
          "readOnly" : true,
          "$ref" : "#/definitions/TriggeredByEntry"
        },
        "timeout" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "suspendTimeout" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "runtime" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "ProcessEventEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "seqId" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "eventType" : {
          "type" : "string",
          "readOnly" : true
        },
        "data" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "eventDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ProcessEventRequest" : {
      "type" : "object",
      "properties" : {
        "eventType" : {
          "type" : "string",
          "readOnly" : true
        },
        "eventDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "data" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ProcessRequirementsEntry" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "requirements" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "ProcessStatusHistoryEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "NEW", "PREPARING", "ENQUEUED", "WAITING", "STARTING", "RUNNING", "SUSPENDED", "RESUMING", "FINISHED", "FAILED", "CANCELLED", "TIMED_OUT" ]
        },
        "changeDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ProcessWaitEntry" : {
      "type" : "object",
      "properties" : {
        "waits" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "isWaiting" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "ProjectEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 1024
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "repositories" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/RepositoryEntry"
          }
        },
        "cfg" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        },
        "acceptsRawPayload" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "rawPayloadMode" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "DISABLED", "OWNERS", "TEAM_MEMBERS", "ORG_MEMBERS", "EVERYONE" ]
        },
        "meta" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "outVariablesMode" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "DISABLED", "OWNERS", "TEAM_MEMBERS", "ORG_MEMBERS", "EVERYONE" ]
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "ProjectOperationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "ProjectProcesses" : {
      "type" : "object",
      "properties" : {
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "running" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "PublicKeyResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "password" : {
          "type" : "string",
          "readOnly" : true
        },
        "publicKey" : {
          "type" : "string",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "RemoveTeamUsersResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "RepositoryEntry" : {
      "type" : "object",
      "required" : [ "url" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 2048
        },
        "branch" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 255
        },
        "commitId" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 64
        },
        "path" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 2048
        },
        "disabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "secretId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "secretName" : {
          "type" : "string",
          "readOnly" : true
        },
        "secretStoreType" : {
          "type" : "string",
          "readOnly" : true
        },
        "meta" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "triggersDisabled" : {
          "type" : "boolean",
          "readOnly" : true
        }
      }
    },
    "RepositoryValidationResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "errors" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "warnings" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "ResourceAccessEntry" : {
      "type" : "object",
      "required" : [ "level" ],
      "properties" : {
        "teamId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamName" : {
          "type" : "string",
          "readOnly" : true
        },
        "level" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OWNER", "WRITER", "READER" ]
        }
      }
    },
    "RestoreCheckpointRequest" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        }
      }
    },
    "ResumeProcessResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "RoleEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "permissions" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RoleOperationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        }
      }
    },
    "Secret" : {
      "type" : "object"
    },
    "SecretEntry" : {
      "type" : "object",
      "required" : [ "name", "storeType", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "KEY_PAIR", "USERNAME_PASSWORD", "DATA" ]
        },
        "encryptedBy" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "SERVER_KEY", "PASSWORD" ]
        },
        "storeType" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        }
      }
    },
    "SecretEntryV2" : {
      "type" : "object",
      "required" : [ "name", "storeType", "type" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projects" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/ProjectEntry"
          }
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "KEY_PAIR", "USERNAME_PASSWORD", "DATA" ]
        },
        "encryptedBy" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "SERVER_KEY", "PASSWORD" ]
        },
        "storeType" : {
          "type" : "string",
          "readOnly" : true
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        },
        "createdAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastUpdatedAt" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid"
        },
        "projectName" : {
          "type" : "string"
        }
      }
    },
    "SecretOperationResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "result" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "CREATED", "UPDATED", "DELETED", "ALREADY_EXISTS", "NOT_FOUND", "VALIDATED" ]
        },
        "password" : {
          "type" : "string",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "SecretStoreEntry" : {
      "type" : "object",
      "required" : [ "description", "storeType" ],
      "properties" : {
        "storeType" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "SecretUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "owner" : {
          "readOnly" : true,
          "$ref" : "#/definitions/EntityOwner"
        },
        "visibility" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "PUBLIC", "PRIVATE" ]
        },
        "storePassword" : {
          "type" : "string",
          "readOnly" : true
        },
        "newStorePassword" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "data" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "StartProcessResponse" : {
      "type" : "object",
      "properties" : {
        "instanceId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "SyncUserLdapGroupRequest" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "readOnly" : true
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "TeamEntry" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 2048
        }
      }
    },
    "TeamLdapGroupEntry" : {
      "type" : "object",
      "properties" : {
        "group" : {
          "type" : "string",
          "readOnly" : true
        },
        "role" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OWNER", "MAINTAINER", "MEMBER" ]
        }
      }
    },
    "TeamUserEntry" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 128
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 512
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true
        },
        "userType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        },
        "role" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "OWNER", "MAINTAINER", "MEMBER" ]
        },
        "memberType" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "SINGLE", "LDAP_GROUP" ]
        },
        "ldapGroupSource" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "TemplateAliasEntry" : {
      "type" : "object",
      "required" : [ "alias", "url" ],
      "properties" : {
        "alias" : {
          "type" : "string",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 2048
        }
      }
    },
    "TemplateAliasResponse" : {
      "type" : "object",
      "properties" : {
        "ok" : {
          "type" : "boolean"
        }
      }
    },
    "TriggerEntry" : {
      "type" : "object",
      "required" : [ "cfg", "eventSource" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "orgName" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "projectName" : {
          "type" : "string",
          "readOnly" : true
        },
        "repositoryId" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "repositoryName" : {
          "type" : "string",
          "readOnly" : true
        },
        "eventSource" : {
          "type" : "string",
          "readOnly" : true
        },
        "activeProfiles" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "arguments" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "conditions" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "cfg" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "object"
          }
        }
      }
    },
    "TriggeredByEntry" : {
      "type" : "object",
      "properties" : {
        "externalEventId" : {
          "type" : "string",
          "readOnly" : true
        },
        "trigger" : {
          "readOnly" : true,
          "$ref" : "#/definitions/TriggerEntry"
        }
      }
    },
    "UpdateUserRolesRequest" : {
      "type" : "object",
      "required" : [ "roles" ],
      "properties" : {
        "roles" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UserActivityResponse" : {
      "type" : "object",
      "properties" : {
        "processStats" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "orgProcesses" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ProjectProcesses"
            }
          }
        },
        "processes" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/ProcessEntry"
          }
        }
      }
    },
    "UserEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 128
        },
        "domain" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 512
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 1024
        },
        "orgs" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/OrganizationEntry"
          }
        },
        "type" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "LOCAL", "LDAP", "SSO" ]
        },
        "email" : {
          "type" : "string",
          "readOnly" : true,
          "minLength" : 0,
          "maxLength" : 512
        },
        "roles" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/RoleEntry"
          }
        },
        "disabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "disabledDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        }
      }
    },
    "UserResponse" : {
      "type" : "object",
      "properties" : {
        "realm" : {
          "type" : "string",
          "readOnly" : true
        },
        "username" : {
          "type" : "string",
          "readOnly" : true
        },
        "userDomain" : {
          "type" : "string",
          "readOnly" : true
        },
        "displayName" : {
          "type" : "string",
          "readOnly" : true
        },
        "orgs" : {
          "type" : "array",
          "readOnly" : true,
          "uniqueItems" : true,
          "items" : {
            "$ref" : "#/definitions/OrganizationEntry"
          }
        }
      }
    },
    "VersionResponse" : {
      "type" : "object",
      "properties" : {
        "version" : {
          "type" : "string",
          "readOnly" : true
        },
        "commitId" : {
          "type" : "string",
          "readOnly" : true
        },
        "env" : {
          "type" : "string",
          "readOnly" : true
        },
        "ok" : {
          "type" : "boolean"
        }
      }
    }
  }
}