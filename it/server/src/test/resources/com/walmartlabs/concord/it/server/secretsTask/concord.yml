flows:
  default:
    - call: delete-secret
    - call: validate-secret-NOT_FOUND
    - call: create-secret
    - call: update-secret-projects
    - call: validate-secret
    - call: get-secret
    - call: validate-secret-INVALID_REQUEST
    - call: update-secret-password
    - call: update-secret-data
    - call: get-secret-again
    - call: delete-secret
    - call: update-secret-create
    - call: delete-secret2

  create-secret:
    - log: "Create secret"
    - task: concordSecrets
      in:
        action: create
        name: ${secretName}
        data: anders-test-value
        storePassword: Dingo1234
        projects:
          - "${projectName1}"
          - "${projectName2}"
    - log: "Create Result: ${result}"

  get-secret:
    - log: "Get secret"
    - task: concordSecrets
      in:
        name: ${secretName}
        storePassword: Dingo1234
    - log: "Get Result: ${result}"
    - if: ${result.data != "anders-test-value"}
      then:
        - throw: "Expected anders-test-value, got ${result}"

  validate-secret:
    - log: "Validate secret"
    - task: concordSecrets
      in:
        action: getAsString
        name: ${secretName}
        storePassword: Dingo1234
    - log: "Validate Result: ${result}"
    - if: ${result.status != "OK"}
      then:
        - throw: "Expected 'OK', got ${result}"

  validate-secret-NOT_FOUND:
    - log: "Validate secret NOT_FOUND"
    - task: concordSecrets
      in:
        action: getAsString
        name: anders-NOT_FOUND-secret
        ignoreErrors: true
    - log: "Validate Result: ${result}"
    - if: ${result.status != "NOT_FOUND"}
      then:
        - throw: "Expected 'NOT_FOUND', got ${result}"

  validate-secret-INVALID_REQUEST:
    - log: "Validate secret INVALID_REQUEST"
    - task: concordSecrets
      in:
        action: getAsString
        name: ${secretName}
        storePassword: wrong
        ignoreErrors: true
    - log: "Validate Result: ${result}"
    - if: ${result.status != "INVALID_REQUEST"}
      then:
        - throw: "Expected 'INVALID_REQUEST', got ${result}"

  update-secret-password:
    - log: "Update secret password"
    - task: concordSecrets
      in:
        action: update
        name: ${secretName}
        storePassword: Dingo1234
        newStorePassword: Tapir1234

  update-secret-data:
    - log: "Update secret data"
    - task: concordSecrets
      in:
        action: update
        name: ${secretName}
        storePassword: Tapir1234
        data: anders-test-elephant

  get-secret-again:
    - log: "Get secret (with new password and data)"
    - task: concordSecrets
      in:
        name: ${secretName}
        storePassword: Tapir1234
    - log: "Get Result: ${result}"
    - if: ${result.data != "anders-test-elephant"}
      then:
        - throw: "Expected anders-test-elephant, got ${result}"

  delete-secret:
    - log: "Delete secret"
    - task: concordSecrets
      in:
        action: delete
        name: ${secretName}
        ignoreErrors: true

  update-secret-create:
    - log: "Update secret create"
    - task: concordSecrets
      in:
        action: update
        name: ${secretName}2
        storePassword: Tapir1234
        data: anders-test-elephant
        createIfMissing: true

  delete-secret2:
    - log: "Delete secret2"
    - task: concordSecrets
      in:
        action: delete
        name: ${secretName}2

  update-secret-projects:
    - log: "Update secret projects"
    - task: concordSecrets
      in:
        action: update
        name: "${secretName}"
        projects:
          - "${projectName1}"

