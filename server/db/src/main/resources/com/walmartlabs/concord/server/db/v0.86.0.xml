<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">

    <changeSet id="86000" author="ibodrov@gmail.com">
        <validCheckSum>7:c24cac0e183b9520896b9e93207e3c49</validCheckSum>
        <validCheckSum>7:0bd22f258406490fd222f5b634c16ce5</validCheckSum>
        <addColumn tableName="PROJECTS">
            <column name="SECRET_KEY" type="longblob">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="86200" author="muhammad.wasi@walmart.com">
        <validCheckSum>7:d93133941dc7620cf83d20401d17cd57</validCheckSum>

        <preConditions onFail="MARK_RAN">
            <columnExists tableName="PROCESS_QUEUE" columnName="INITIATOR"/>
        </preConditions>

        <addColumn tableName="PROCESS_QUEUE">
            <column name="INITIATOR_ID" type="uuid">
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <addForeignKeyConstraint baseTableName="PROCESS_QUEUE"
                                 baseColumnNames="INITIATOR_ID"
                                 constraintName="FK_PQ_INITIATOR_ID"
                                 referencedTableName="USERS"
                                 referencedColumnNames="USER_ID"
                                 onDelete="SET NULL"/>

        <createProcedure>
            create or replace function UPDATE_PROCESS_QUEUE_INITIATOR()
            returns trigger as
            $$
            BEGIN
                if NEW.INITIATOR is null then
                    NEW.INITIATOR := (select U.USERNAME from USERS U where U.USER_ID = new.initiator_id);
                end if;
                return new;
            end;
            $$ language plpgsql;
        </createProcedure>

        <createProcedure>
            create or replace function UPDATE_PROCESS_QUEUE_INITIATOR_ID()
            returns trigger as
            $$
            begin
                if NEW.INITIATOR_ID is null then
                    NEW.INITIATOR_ID := (select U.USER_ID from USERS U where U.USERNAME = new.initiator);
                end if;
                return NEW;
            end;
            $$ language plpgsql;
        </createProcedure>

        <!-- temporary triggers to mitigate data inconsistency during blue-green deployment -->
        <sql>
            drop trigger if exists UPDATE_PROCESS_QUEUE_INITIATOR on PROCESS_QUEUE;
            drop trigger if exists UPDATE_PROCESS_QUEUE_INITIATOR_ID on PROCESS_QUEUE;
            create trigger UPDATE_PROCESS_QUEUE_INITIATOR_ID before insert on PROCESS_QUEUE for each row execute procedure UPDATE_PROCESS_QUEUE_INITIATOR_ID();
        </sql>

        <!-- deprecated in 1.31.0+
        <createView viewName="V_PROCESS_QUEUE" replaceIfExists="true">
            select
                q1.INSTANCE_ID,
                q1.PROCESS_KIND,
                q1.PARENT_INSTANCE_ID,
                prj.ORG_ID,
                prj.ORG_NAME,
                prj.PROJECT_ID,
                prj.PROJECT_NAME,
                q1.REPO_ID,
                repos.REPO_NAME,
                q1.REPO_URL,
                q1.REPO_PATH,
                q1.COMMIT_ID,
                q1.COMMIT_MSG,
                q1.CREATED_AT,
                users.username as INITIATOR,
                q1.INITIATOR_ID,
                q1.CURRENT_STATUS,
                q1.LAST_AGENT_ID,
                q1.LAST_UPDATED_AT,
                q1.PROCESS_TAGS,
                array(select q2.INSTANCE_ID from PROCESS_QUEUE as q2 where q2.PARENT_INSTANCE_ID = q1.INSTANCE_ID) as CHILDREN_IDS

            from PROCESS_QUEUE as q1

            left join
                (select
                PROJECT_ID,
                PROJECT_NAME,
                ORG_ID,
                (select ORG_NAME from ORGANIZATIONS where ORGANIZATIONS.ORG_ID = PROJECTS.ORG_ID)
                from PROJECTS) prj
                on prj.PROJECT_ID = q1.PROJECT_ID

            left join
                REPOSITORIES repos on repos.REPO_ID = q1.REPO_ID

            left join
                USERS users on users.user_id = q1.INITIATOR_ID
        </createView>
        -->

        <sql>
            update process_queue p
            set initiator_id = u.user_id
            from users u
            where u.username = p.initiator
        </sql>
    </changeSet>

    <changeSet id="86300" author="muhammad.wasi@walmart.com">
        <addColumn tableName="PROCESS_CHECKPOINTS">
            <column name="CHECKPOINT_NAME" type="varchar(128)">
                <constraints nullable="true"/>
            </column>
            <column name="CHECKPOINT_DATE" type="timestamp">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>
</databaseChangeLog>
